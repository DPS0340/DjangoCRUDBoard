# server {
#         listen 80;
#         # server_name 128.199.161.10;

#         location = /favicon.ico { access_log off; log_not_found off; }

#         # location /static/ {
#         #         root /home/foo/django_test/repo;
#         # }

#         location / {
#                 # include proxy_params;
#                 proxy_pass unix:/code/run/gunicorn.sock fail_timeout=0;
#         }
# }

upstream djangocrudboard {
        server gunicorn-backend:8000 fail_timeout=0;
}
server {
listen   80;
server_name example.com;
client_max_body_size 4G;
access_log /var/DjangoCRUDBoard-logs/nginx-access.log;
error_log /var/DjangoCRUDBoard-logs/nginx-error.log;
location / {
# an HTTP header important enough to have its own Wikipedia entry:
#   http://en.wikipedia.org/wiki/X-Forwarded-For
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# enable this if and only if you use HTTPS, this helps Rack
# set the proper protocol for doing redirects:
# proxy_set_header X-Forwarded-Proto https;
# pass the Host: header from the client right along so redirects
# can be set properly within the Rack application
proxy_set_header Host $http_host;
# we don't want nginx trying to do something clever with
# redirects, we set the Host: header above already.
proxy_redirect off;
# set "proxy_buffering off" *only* for Rainbows! when doing
# Comet/long-poll stuff.  It's also safe to set if you're
# using only serving fast clients with Unicorn + nginx.
# Otherwise you _want_ nginx to buffer responses to slow
# clients, really.
# proxy_buffering off;
# Try to serve static files from nginx, no point in making an
# *application* server like Unicorn/Rainbows! serve static files.
if (!-f $request_filename) {
proxy_pass http://djangocrudboard;
break;
}
}
}